var subject = require('./subject.js')
var mock = require('mock-fs');
subject.inc(1,undefined);
subject.inc(1,"werwde");
subject.inc(1,"test");
subject.inc(-1,undefined);
subject.inc(-1,"werwde");
subject.inc(-1,"test");
subject.weird(8,1,43,"strict");
subject.weird(8,1,43,"werwde");
subject.weird(8,1,43,"test");
subject.weird(8,1,41,"strict");
subject.weird(8,1,41,"werwde");
subject.weird(8,1,41,"test");
subject.weird(8,-1,43,"strict");
subject.weird(8,-1,43,"werwde");
subject.weird(8,-1,43,"test");
subject.weird(8,-1,41,"strict");
subject.weird(8,-1,41,"werwde");
subject.weird(8,-1,41,"test");
subject.weird(6,1,43,"strict");
subject.weird(6,1,43,"werwde");
subject.weird(6,1,43,"test");
subject.weird(6,1,41,"strict");
subject.weird(6,1,41,"werwde");
subject.weird(6,1,41,"test");
subject.weird(6,-1,43,"strict");
subject.weird(6,-1,43,"werwde");
subject.weird(6,-1,43,"test");
subject.weird(6,-1,41,"strict");
subject.weird(6,-1,41,"werwde");
subject.weird(6,-1,41,"test");
subject.fileTest('path/fileExists','pathContent/file1');
subject.fileTest('path/fileExists','pathContent/file2');
subject.fileTest('path/filePresent','pathContent/file1');
subject.fileTest('path/filePresent','pathContent/file2');
subject.fileTest('path/fileExists','pathContent/file1');
subject.fileTest('path/fileExists','pathContent/file2');
subject.fileTest('path/fileExists','pathContent/file1');
subject.fileTest('path/fileExists','pathContent/file2');
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/filePresent','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/filePresent','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/filePresent','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/filePresent','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/filePresent','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/filePresent','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/filePresent','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/filePresent','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/filePresent":{"test.txt":"testing"}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
subject.normalize('909-266-9336','(###) ###-####',{"normalize":true});
subject.normalize('(947) 932-4076 x10258','1-###-###-#### x###',{"shouldNormalize":true});
subject.format('257.771.8954 x479','(###) ###-#### x###',{"normalize":true});
subject.format('1-822-868-3694 x666','1-###-###-#### x###',{"shouldNormalize":true});
subject.blackListNumber("(212) 123-4567");
subject.blackListNumber("(213) 123-4567");
subject.blackListNumber('257-001-3836 x420','1-###-###-#### x####',{"normalize":true});
subject.blackListNumber('1-730-025-3053','(###) ###-####',{"shouldNormalize":true});
